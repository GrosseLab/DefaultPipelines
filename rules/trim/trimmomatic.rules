rule trimmomatic_pe_quality_trimming:
	input: expand("data/reads/adapter_trimmed/{{pre}}{read}{{suf}}.fastq.gz", read=["R1", "R2"])
	output:
		expand("data/reads/quality_trimmed/{{pre}}{read}{{suf}}.fastq.gz", read=["R1", "R2"]),
		expand("data/reads/quality_trimmed/{{pre}}{read}{{suf}}_unpaired.fastq.gz", read=["R1", "R2"])
	threads: 3
	shell: "trimmomatic PE -threads {threads} -phred33 {input} {output[0]} {output[2]} {output[1]} {output[3]} LEADING:5 TRAILING:5 SLIDINGWINDOW:4:15 MINLEN:36"

rule trimmomatic_pe_adapter_trimming:
	input:
		fastqs = expand("data/reads/raw//{{pre}}{read}{{suf}}.fastq.gz", read=["R1", "R2"]),
		adapters = config["ref_dir"] + "/illumina/adapters/TruSeq3-PE.fa"
	output:
		expand("data/reads/adapter_trimmed/{{pre}}{read}{{suf}}.fastq.gz", read=["R1", "R2"]),
		expand("data/reads/adapter_trimmed/{{pre}}{read}{{suf}}_unpaired.fastq.gz", read=["R1", "R2"])
	threads: 3
	shell: "trimmomatic PE -threads {threads} -phred33 {input.fastqs} {output[0]} {output[2]} {output[1]} {output[3]} ILLUMINACLIP:{input.adapters}:2:30:10"

rule trimmomatic_se_quality_trimming:
	input: fastqs = lambda wildcards: map( lambda f: "data/reads/adapter_trimmed/" + f, config["units"][wildcards.unit])
	output: "data/reads/quality_trimmed/{unit}_P1.fastq.gz",
	shell: "trimmomatic SE -phred33 {input.fastqs} {output} LEADING:5 TRAILING:5 SLIDINGWINDOW:4:15 MINLEN:36"

rule trimmomatic_se_adapter_trimming:
	input:
		fastq = lambda wildcards: map( lambda f: "data/reads/raw/" + f, config["units"][wildcards.unit]),
		adapters = config["ref_dir"] + "/illumina/adapters/TruSeq3-SE.fa"
	output: "data/reads/adapter_trimmed/{unit}_P1.fastq.gz",
	shell: "trimmomatic SE -phred33 {input.fastq} {output} ILLUMINACLIP:{input.adapters}:2:30:10"
