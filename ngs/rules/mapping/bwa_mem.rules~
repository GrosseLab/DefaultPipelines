# Expects a config filled template config

# dictionary to get the sample assigned to a unit
UNIT_TO_SAMPLE = {
    unit: sample for sample, units in config["samples"].items()
    for unit in units }

BWA_INDEX_SUFFIXES = [ ".amb", ".ann", ".bwt", ".dict", ".fai", ".idx", ".pac", ".sa" ]

rule bwa_index:
    input: "{prefix}.fa"
    output: "{prefix}.fa.sa"
    shell: "bwa index {input}"

rule bwa_mem_map:
    input:
        ref = lambda wildcards: config["references"][wildcards.reference] + ".sa",
        fastq = lambda wildcards: map( lambda f: "data/reads/" + wildcards.kind + "/" + f, config["units"][wildcards.unit])
    output:
        "results/mapping/{reference}/{kind}/{unit}.bam"
    params:
        sample = lambda wildcards: UNIT_TO_SAMPLE[wildcards.unit]
    log: 
        "results/mapping/log/{reference}/{kind}/{unit}_bwa_mem.log"
    threads: 10
    shell: "bwa mem -M " # picard compatibility
           "-R '@RG\\tID:{wildcards.unit}\\t"
           "SM:{params.sample}\\tPL:{config[platform]}' "
           "-t {threads} {wildcards.reference} {input.fastq} 2> {log} "
           "| samtools view -Sbh - > {output}"
