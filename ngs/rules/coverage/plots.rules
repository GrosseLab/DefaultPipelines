#############################################################################
#          Rules to generate coverage plots.                                #
#                                                                           #
# Date: 02.01.2015                                                          #
#                                                                           #
#############################################################################

from snakemake.utils import R

rule plot_regions:
    """Produces coverage plots for each gene in the manifest file."""
    input: expand("results/coverage/{{ref}}/{{kind}}/{unit}_{{platform}}_{{manifest}}_{{left}}_{{right}}.cov", unit = config["units"].keys() )
    output: "plots/coverage/{ref}/{kind}/{platform}_{manifest}_{left}_{right}/BRCA1.pdf"
    run: 
      files = "c({})".format(",".join(map( lambda str: '"' + str + '"', input))),
      ref = wildcards.ref,
      kind = wildcards.kind,
      platform = wildcards.platform,
      manifest = wildcards.manifest,
      left = wildcards.left,
      right = wildcards.right,
      run = config["run"],
      R("""
      library(ggplot2)

      files <- {files}
      labels <- sub( '_.*', "", basename(files)) # extract sample names
      cov <- list()
      for (i in seq_along(files)) {{
      cov[[i]] <- read.table(files[i])
      cov[[i]] <- cbind( labels[i], cov[[i]])
      }}

      df <- do.call('rbind', cov)
      regions <- sub(".*?-", "", df[,5]) # delete gene name (? activates non-greedy evaluation of regex)
      features <- sub("-.*", "", df[,5]) # delete coordinates
      
      df <- data.frame( Sample = df[,1], Chromosome = df[,2], Start = df[,3], End = df[,4], Feature = features, 
      Region = regions, Position = df[,6], Coverage = df[,7])
      df[,'Position'] <- df[, 'Position'] - {left}

      setwd('plots/coverage/{ref}/{kind}/{platform}_{manifest}_{left}_{right}/')

      for (f in levels( df[,'Feature'] ) ) {{
      filename <- paste(f, ".pdf", sep = '')
      cat(paste("Plotting", filename))
      features <- df[(df[,'Feature'] == f),]
      p <- ggplot( data = features, aes( x = Position, y = Coverage, colour = Sample) )
      p <- p + geom_line() + geom_hline( aes(yintercept = 100)) 
      p <- p + scale_y_log10(limits = c(1, 20000), breaks = 10^(1:4))
      p <- p + geom_vline( xintercept = 0, colour="grey", linetype = "longdash" )
      p <- p + geom_vline( aes( xintercept = End - Start - {left} - {right} ), colour="grey", linetype = "longdash" )
      p <- p + facet_wrap( ~ Region, scales = 'free_x' )
      p <- p + ggtitle( paste('Coverage of target regions in', f, 'on', features[1,'Chromosome'], 'in {ref}, run: {run}') )
      p <- p + theme( plot.title = element_text( face = 'bold', vjust = 2 ) )
      ggsave( file = filename, plot = p, width = 10, height = 10, title = paste("Coverage of target regions in", f) )      
      }}
      """)


rule plot_hist:
    """Produces a summary plot of target coverage."""
    input: expand("results/coverage/{{ref}}/{{kind}}/{unit}_{{platform}}_{{manifest}}_{{left}}_{{right}}.hist", unit = config["units"].keys() )
    output: "plots/coverage/{ref}/{kind}/{platform}_{manifest}_{left}_{right}/Total.pdf"
    run:
      files = "c({})".format(",".join(map( lambda str: '"' + str + '"', input))),
      ref = wildcards.ref,
      kind = wildcards.kind,
      platform = wildcards.platform,
      manifest = wildcards.manifest,
      left = wildcards.left,
      right = wildcards.right,
      run = config["run"],
      R("""
      library(ggplot2)

      files <- {files}
      labels <- sub( '_.*', "", files) # extract sample names
      cov <- list()

      for (i in seq_along(files)) {{
      cov[[i]] <- read.table(files[i])
      cov[[i]] <- cov[[i]][,c(-1, -4)] # drop first column
      cov[[i]] <- cbind( cov[[i]], 1 - cumsum( cov[[i]][,3] ) ) # add cummulative frequency of depth
      cov[[i]] <- cbind( labels[i], cov[[i]]) # add label column
      }}
      
      df <- do.call('rbind', cov)
      colnames(df) <- c('Sample', 'Depth', 'Count', 'Frequency', 'CumFrequency')

      setwd('plots/coverage/{ref}/{kind}/{platform}_{manifest}_{left}_{right}')

      p <- ggplot( data = df, aes( x = Depth, y = CumFrequency, colour = Sample ) ) 
      p <- p + geom_line() + xlim(0, 500) + ylim(0.7, 1.0)
      p <- p + geom_vline( xintercept = c(20,50,100), linetype = "longdash" )
      p <- p + ggtitle("Coverage distribution in run {run} using {ref}") + xlab("Depth of coverage") 
      p <- p + ylab( sprintf("Fraction of target bases with a coverage >= depth" ) )
      ggsave( file = "Total.pdf", plot = p, width = 10, height = 10, title = "Coverage distribution of target regions" )
      """)
